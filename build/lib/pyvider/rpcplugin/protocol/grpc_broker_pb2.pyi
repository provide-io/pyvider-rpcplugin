"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) HashiCorp, Inc.
SPDX-License-Identifier: MPL-2.0
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ConnInfo(google.protobuf.message.Message):
    """option python_package = "pyvider.rpcplugin.protocol";"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Knock(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KNOCK_FIELD_NUMBER: builtins.int
        ACK_FIELD_NUMBER: builtins.int
        ERROR_FIELD_NUMBER: builtins.int
        knock: builtins.bool
        ack: builtins.bool
        error: builtins.str
        def __init__(
            self,
            *,
            knock: builtins.bool = ...,
            ack: builtins.bool = ...,
            error: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["ack", b"ack", "error", b"error", "knock", b"knock"]) -> None: ...

    SERVICE_ID_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    KNOCK_FIELD_NUMBER: builtins.int
    service_id: builtins.int
    network: builtins.str
    address: builtins.str
    @property
    def knock(self) -> global___ConnInfo.Knock: ...
    def __init__(
        self,
        *,
        service_id: builtins.int = ...,
        network: builtins.str = ...,
        address: builtins.str = ...,
        knock: global___ConnInfo.Knock | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["knock", b"knock"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["address", b"address", "knock", b"knock", "network", b"network", "service_id", b"service_id"]) -> None: ...

global___ConnInfo = ConnInfo
